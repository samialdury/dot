{
    // Security
    "security.workspace.trust.untrustedFiles": "newWindow",
    // Telemetry
    "telemetry.telemetryLevel": "off",
    "gitlens.telemetry.enabled": false,
    "redhat.telemetry.enabled": false,
    // Window
    "window.autoDetectColorScheme": true,
    "window.nativeTabs": false,
    "window.titleBarStyle": "native",
    "window.customTitleBarVisibility": "never",
    "window.commandCenter": false,
    // Workbench
    "workbench.productIconTheme": "fluent-icons",
    "workbench.iconTheme": "catppuccin-mocha",
    "workbench.preferredLightColorTheme": "Catppuccin Mocha",
    "workbench.preferredDarkColorTheme": "Catppuccin Mocha",
    "workbench.colorTheme": "Catppuccin Mocha",
    "workbench.startupEditor": "none",
    "workbench.tips.enabled": false,
    "workbench.statusBar.visible": true,
    // "workbench.activityBar.location": "hidden",
    "workbench.colorCustomizations": {
        "[Fleet*]": {
            "statusBar.border": "#292929",
            "tab.inactiveBackground": "#292929",
            "editorGroupHeader.border": "#292929",
            "editorGroupHeader.tabsBackground": "#292929",
            "editorLineNumber.foreground": "#5D5D5D",
            "tab.inactiveForeground": "#D1D1D1",
            "tab.activeForeground": "#fff",
            "searchEditor.textInputBorder": "#fff",
            "tab.activeBorderTop": "#fff",
            // inlay hints
            "editorInlayHint.foreground": "#5D5D5D",
            "editorInlayHint.background": "#FFFFFF00",
            // zsh auto suggestions
            "terminal.ansiBrightBlack": "#5D5D5D"
        },
        "[Kaolin*]": {
            "statusBar.background": "#5b3e31",
            "terminal.ansiBrightMagenta": "#956a4e",
            "terminal.ansiBrightCyan": "#4c6444",
            // inlay hints
            "editorInlayHint.background": "#FFFFFF00",
            // zsh auto suggestions
            "terminal.ansiBrightBlack": "#A0A0A0"
        }
    },
    // Explorer
    "explorer.compactFolders": false,
    "explorer.confirmDelete": false,
    "explorer.decorations.colors": true,
    "explorer.decorations.badges": false,
    "explorer.excludeGitIgnore": false,
    // Editor
    "editor.fontFamily": "JetBrainsMono Nerd Font Mono", // "JetBrainsMono Nerd Font Mono", "FiraCode Nerd Font Mono Ret"
    "editor.fontSize": 18,
    "editor.lineHeight": 1.6,
    "editor.fontWeight": "normal",
    "editor.fontLigatures": false,
    "editor.suggestSelection": "first",
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.formatOnPaste": false,
    "editor.autoIndent": "keep",
    "editor.minimap.enabled": false,
    "editor.bracketPairColorization.enabled": true,
    "editor.linkedEditing": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.inlineSuggest.enabled": true,
    "editor.inlayHints.enabled": "on",
    "editor.inlayHints.fontFamily": "JetBrainsMono Nerd Font Mono",
    "editor.inlayHints.fontSize": 18,
    "editor.semanticHighlighting.enabled": true,
    "editor.stickyScroll.enabled": true,
    "editor.maxTokenizationLineLength": 2500,
    "editor.lineNumbers": "on",
    "editor.quickSuggestions": {
        "strings": "on"
    },
    "editor.copyWithSyntaxHighlighting": false,
    "editor.lightbulb.enabled": "off",
    "editor.smoothScrolling": true,
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.cursorStyle": "line",
    "editor.cursorBlinking": "smooth",
    "editor.scrollbar.horizontal": "hidden",
    "editor.wordWrap": "on",
    "editor.wrappingStrategy": "advanced",
    "editor.hover.enabled": true,
    "editor.renderLineHighlight": "none",
    "editor.occurrencesHighlight": "off",
    "editor.gotoLocation.multipleReferences": "goto",
    "editor.gotoLocation.multipleDefinitions": "goto",
    "editor.gotoLocation.multipleDeclarations": "goto",
    "editor.gotoLocation.multipleImplementations": "goto",
    "editor.gotoLocation.multipleTypeDefinitions": "goto",
    "editor.suggestFontSize": 18,
    "editor.suggestLineHeight": 25,
    // Search
    "search.useIgnoreFiles": false,
    "search.exclude": {
        "**/node_modules": true,
        "**/dist": true,
        "**debug": true
    },
    // Terminal
    "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font Mono",
    "terminal.integrated.fontSize": 18,
    "terminal.integrated.lineHeight": 1,
    "terminal.integrated.minimumContrastRatio": 1,
    "terminal.integrated.defaultLocation": "view",
    // Files
    "files.autoSave": "onFocusChange",
    "files.autoSaveWhenNoErrors": true,
    "files.insertFinalNewline": true,
    // Git
    "git.mergeEditor": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "git.openRepositoryInParentFolders": "always",
    "git.enableCommitSigning": true,
    "git.decorations.enabled": false,
    // APC
    "apc.electron": {
        "frame": false
        // "titleBarStyle": "hiddenInset",
        // "titleBarOverlay": {
        //     "color": "#292929",
        //     "symbolColor": "#fff"
        // },
        // "trafficLightPosition": {
        //     "x": 8,
        //     "y": 9
        // },
    },
    "apc.header": {
        "height": 34
    },
    "apc.parts.font.family": {
        "sidebar": "JetBrainsMono Nerd Font Mono"
    },
    "apc.font.family": "JetBrainsMono Nerd Font Mono",
    "apc.monospace.font.family": "JetBrainsMono Nerd Font Mono",
    "apc.activityBar": {
        "position": "bottom",
        "size": 36,
        "itemSize": 36,
        "itemMargin": 2
    },
    "apc.statusBar": {
        "position": "editor-bottom"
    },
    "apc.stylesheet": {
        ".editor .title .actions-container .action-item a:not(.codicon-close-dirty):not(.codicon-preferences-open-settings)": "display: none !important;"
    },
    // Errors
    "errorLens.enabled": true,
    "errorLens.padding": "0",
    "errorLens.gutterIconsEnabled": true,
    "errorLens.removeLinebreaks": false,
    "errorLens.scrollbarHackEnabled": true,
    "errorLens.fontWeight": "600",
    "errorLens.fontFamily": "JetBrainsMono Nerd Font Mono",
    // Settings
    "settings.cycle": [
        {
            "id": "explorer.excludeGitIgnore",
            "values": [
                {
                    "explorer.excludeGitIgnore": true
                },
                {
                    "explorer.excludeGitIgnore": false
                }
            ]
        }
    ],
    // Copilot
    "github.copilot.enable": {
        "*": true,
        "plaintext": true,
        "markdown": true,
        "scminput": false,
        "yaml": true,
        "go": false,
        "rust": true,
        "dotenv": false
    },
    "github.copilot.editor.enableCodeActions": false,
    // Prettier
    "prettier.requireConfig": true,
    "prettier.useEditorConfig": false,
    // ESLint
    "eslint.runtime": "node",
    "eslint.execArgv": [
        "--max_old_space_size=8192"
    ],
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "astro"
    ],
    "eslint.experimental.useFlatConfig": true,
    "eslint.workingDirectories": [
        {
            "mode": "auto"
        }
    ],
    // JavaScript
    "javascript.preferences.importModuleSpecifier": "relative",
    "javascript.updateImportsOnFileMove.enabled": "always",
    "[javascript]": {
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
        }
    },
    // TypeScript
    "typescript.tsserver.maxTsServerMemory": 4096,
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "[typescript]": {
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
        }
    },
    "[typescriptreact]": {
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
        }
    },
    "[javascript][typescript][typescriptreact]": {
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
        }
    },
    // Go
    "go.toolsManagement.autoUpdate": true,
    "[go]": {
        "editor.defaultFormatter": "golang.go",
        "editor.tabSize": 4,
        "editor.useTabStops": true,
        "editor.insertSpaces": false,
        "files.insertFinalNewline": false
    },
    "go.lintTool": "golangci-lint",
    "go.lintFlags": [
        "--fast"
    ],
    "[go.mod]": {
        "editor.defaultFormatter": "golang.go"
    },
    "gopls": {
        "ui.semanticTokens": true
    },
    // Rust
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "editor.codeActionsOnSave": {
            "source.fixAll": "explicit"
        },
        "editor.tabSize": 4
    },
    // JSON
    "[json]": {
        "editor.suggest.insertMode": "replace",
        "gitlens.codeLens.scopes": [
            "document"
        ]
    },
    // YAML
    "[yaml]": {
        "editor.insertSpaces": true,
        "editor.tabSize": 4,
        "gitlens.codeLens.scopes": [
            "document"
        ]
    },
    // SQL
    "[sql]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "sql-formatter.uppercase": true,
    // Prisma
    "[prisma]": {
        "editor.defaultFormatter": "Prisma.prisma"
    },
    // Markdown
    "[markdown]": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.wordWrap": "on"
    },
    // CSS
    "[css]": {
        "editor.suggest.insertMode": "replace",
        "gitlens.codeLens.scopes": [
            "document"
        ]
    },
    "tailwindCSS.experimental.classRegex": [
        [
            "cva\\(([^)]*)\\)",
            "[\"'`]([^\"'`]*).*?[\"'`]"
        ],
        [
            "cx\\(([^)]*)\\)",
            "(?:'|\"|`)([^']*)(?:'|\"|`)"
        ],
        [
            "cn\\(([^)]*)\\)",
            "(?:'|\"|`)([^']*)(?:'|\"|`)"
        ],
        [
            "clsx\\(([^)]*)\\)",
            "(?:'|\"|`)([^']*)(?:'|\"|`)"
        ]
    ],
    // Terraform
    "[terraform]": {
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        "editor.defaultFormatter": "hashicorp.terraform",
        "editor.codeActionsOnSave": {
            "source.formatAll.terraform": "explicit",
            "source.fixAll.terraform": "explicit"
        }
    },
    "[terraform-vars]": {
        "editor.defaultFormatter": "hashicorp.terraform",
        "editor.codeActionsOnSave": {
            "source.formatAll.terraform": "explicit",
            "source.fixAll.terraform": "explicit"
        }
    },
    "[terraform][terraform-vars]": {
        "editor.codeActionsOnSave": {
            "source.formatAll.terraform": "explicit",
            "source.fixAll.terraform": "explicit"
        }
    },
    // Docker
    "[dockercompose]": {
        "editor.insertSpaces": true,
        "editor.tabSize": 4,
        "editor.autoIndent": "advanced"
    },
    "[dockerfile]": {
        "editor.defaultFormatter": "ms-azuretools.vscode-docker"
    },
    // DotENV
    "dotenv.enableAutocloaking": false,
    "[dotenv]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    // Vim
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1
    },
    // Other
    "files.associations": {
        "*.css": "tailwindcss",
        ".env*": "dotenv",
        "*.mdx": "markdown",
        "*.vars": "dotenv",
        "*.sentryclirc": "toml",
        "*.tfvars": "terraform-vars",
        "*.yaml.tmpl": "yaml",
        "*.yaml.tpl": "yaml",
        "*.yml.tmpl": "yaml",
        "*.yml.tpl": "yaml"
    },
    "[makefile]": {
        "editor.tabSize": 4,
        "editor.insertSpaces": false
    },
    "[shellscript]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "[properties]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "[ignore]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "pulumi-lsp.detectExtensionConflicts": false,
    "editor.tokenColorCustomizations": {
        "[*Light*]": {
            "textMateRules": [
                {
                    "scope": "ref.matchtext",
                    "settings": {
                        "foreground": "#000"
                    }
                }
            ]
        },
        "[*Dark*]": {
            "textMateRules": [
                {
                    "scope": "ref.matchtext",
                    "settings": {
                        "foreground": "#fff"
                    }
                }
            ]
        },
        "textMateRules": []
    }
}
